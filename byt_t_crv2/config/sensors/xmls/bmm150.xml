<?xml version="1.0" encoding="ISO-8859-1"?>
<sensors>
 <sensor>
  <driver_config>
    <basic_info>
      <i2c_bus_num>3</i2c_bus_num>
      <i2c_addrs>
	<addr>0x13</addr>
      </i2c_addrs>
      <id_reg_addr>0x40</id_reg_addr>
      <ids>
        <id>0x32</id>
      </ids>
      <device_name>BSBM0150:00</device_name>
      <input_name>comp</input_name>
      <event_type>EV_REL</event_type>
      <method>polling</method>
      <default_poll_interval>200</default_poll_interval>
      <min_poll_interval>18</min_poll_interval>
      <max_poll_interval></max_poll_interval>
      <gpio_num></gpio_num>
      <irq_flag></irq_flag>
      <irq_serialize></irq_serialize>
    </basic_info>
    <odr_tables>
    </odr_tables>
    <range_tables>
    </range_tables>
    <sys_entries>
    </sys_entries>
    <sensor_actions>
      <init><![CDATA[
        /*wakeup from suspend*/
        writereg_0x4b_0_1 = 0x1;
        sleep_2;
        /*set data rate 10hz and sleep mode*/
	readreg_0x4c_0_1;
	writereg_0x4c_0_1 = (regbuf_0x4c_1 & 0xc1 ) | 6;
        /*set repetitions*/
	writereg_0x51_0_1 = 4;
	writereg_0x52_0_1 = 23;

	/*trim data*/
	readreg_0x5d_0_1;
	readreg_0x5e_0_1;
	readreg_0x64_0_1;
	readreg_0x65_0_1;
	readreg_0x70_0_1;
	readreg_0x71_0_1;
	readreg_0x6a_0_2;
	readreg_0x68_0_2;
	readreg_0x6e_0_2;
	readreg_0x62_0_2;
	readreg_0x6c_0_2;

	/*enter suspend mode by 0x4b[0]=0*/
        readreg_0x4b_0_1;
        writereg_0x4b_0_1 = regbuf_0x4b_1 & 0xf7;
        ]]>
      </init>
      <deinit>
      </deinit>
      <enable><![CDATA[
        /*enter sleep mode from suspend mode*/
        readreg_0x4b_0_1;
        writereg_0x4b_0_1 = regbuf_0x4b_1 | 0x1;
        /*enter active mode*/
        readreg_0x4c_0_1;
	writereg_0x4c_0_1 = regbuf_0x4c_1 & 0xf9;
        ]]>
      </enable>
      <disable><![CDATA[
        /*enter sleep mode from active mode*/
	writereg_0x4c_0_1 = (regbuf_0x4c_1 & 0xf9 ) | 0x6;
	/*enter suspend mode by 0x4b[0]=0*/
        readreg_0x4b_0_1;
        writereg_0x4b_0_1 = regbuf_0x4b_1 & 0xf7;
        ]]>
      </disable>
      <int_ack>
      </int_ack>
      <get_data_x><![CDATA[
        /*do compensation with triming values which can be get at initial*/
        readreg_0x42_0x0_8;
        return le16_to_cpu(regbuf_0x42_2) >> 3;
        ]]>
      </get_data_x>
      <get_data_y><![CDATA[
        return le16_to_cpu(regbuf_0x44_2) >> 3;
        ]]>
      </get_data_y>
      <get_data_z><![CDATA[
        return le16_to_cpu(regbuf_0x46_2) >> 1;
        ]]>
      </get_data_z>
    </sensor_actions>
  </driver_config>
  <hal_config>
    <type>compass</type>
    <platform_config>
      <data_node></data_node>
      <driver_calibration_node></driver_calibration_node>
      <driver_calibration_file></driver_calibration_file>
      <driver_calibration_function></driver_calibration_function>
      <calibration_file>/data/compass.conf</calibration_file>
      <calibration_function>CompassGenericCalibration</calibration_function>
      <fliter_length>50</fliter_length>
    </platform_config>
    <device>
      <name>BMC150 Magnetic field sensor</name>
      <vendor>BOSCH</vendor>
      <version>1</version>
      <maxRange>2500.0</maxRange>
      <resolution>0.3</resolution>
      <power>0.1</power>
      <minDelay>20000</minDelay>
      <mapper axis_x="X" axis_y="Y" axis_z="Z"></mapper>
      <scale axis_x="0.0625" axis_y="0.0625" axis_z="-0.0625"></scale>
    </device>
  </hal_config>
 </sensor>
</sensors>

